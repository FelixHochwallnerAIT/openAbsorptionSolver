// -*- C++ -*-
// File generated by PyFoam - sorry for the ugliness

FoamFile
{
 version 2.0;
 format ascii;
 class dictionary;
 object blockMeshDict;
}

vertices
  (
    (0 0.003 0)
    (0 0.003 0.0001)
    (0 0.00275 0)
    (0 0.00275 0.0001)
    (0 0.00225 0)
    (0 0.00225 0.0001)
    (0 0.00075 0)
    (0 0.00075 0.0001)
    (0 0.00025 0)
    (0 0.00025 0.0001)
    (0 0 0)
    (0 0 0.0001)
    (0.02 0.003 0)
    (0.02 0.003 0.0001)
    (0.02 0.00275 0)
    (0.02 0.00275 0.0001)
    (0.02 0.00225 0)
    (0.02 0.00225 0.0001)
    (0.02 0.00075 0)
    (0.02 0.00075 0.0001)
    (0.02 0.00025 0)
    (0.02 0.00025 0.0001)
    (0.02 0 0)
    (0.02 0 0.0001)
    (0.04 0.003 0)
    (0.04 0.003 0.0001)
    (0.04 0.00275 0)
    (0.04 0.00275 0.0001)
    (0.04 0.00225 0)
    (0.04 0.00225 0.0001)
    (0.04 0.00075 0)
    (0.04 0.00075 0.0001)
    (0.04 0.00025 0)
    (0.04 0.00025 0.0001)
    (0.04 0 0)
    (0.04 0 0.0001)
    (0.06 0.003 0)
    (0.06 0.003 0.0001)
    (0.06 0.00275 0)
    (0.06 0.00275 0.0001)
    (0.06 0.00225 0)
    (0.06 0.00225 0.0001)
    (0.06 0.00075 0)
    (0.06 0.00075 0.0001)
    (0.06 0.00025 0)
    (0.06 0.00025 0.0001)
    (0.06 0 0)
    (0.06 0 0.0001)
  );

edges
  (
  );

blocks
  (
    hex

    (
      4
      16
      14
      2
      5
      17
      15
      3
    )
    (467 12 1)
    simpleGrading
    (1 1 1)
  );

boundary
  (
    inlet

    {
      faces
        (

          (
            4
            16
            14
            2
          )
        );
      type patch;

    }
    outlet

    {
      faces
        (

          (
            5
            17
            15
            3
          )
        );
      type patch;

    }
    wall

    {
      faces
        (

          (
            2
            14
            15
            3
          )
        );
      type patch;

    }
    front_back

    {
      faces
        (

          (
            4
            2
            3
            5
          )

          (
            16
            14
            15
            17
          )
        );
      type patch;

    }
    solution_to_air

    {
      faces
        (

          (
            4
            16
            17
            5
          )
        );
      type patch;

    }
  );

mergePatchPairs
  (
  ); 	// ************************************************************************* //

