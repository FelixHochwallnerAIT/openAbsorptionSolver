// -*- C++ -*-
// File generated by PyFoam - sorry for the ugliness

FoamFile
{
 version 2.0;
 format ascii;
 class dictionary;
 location "system";
 object controlDict;
}

application simpleFoam;

startFrom latestTime;

startTime 0;

stopAt endTime;

endTime 10000;

deltaT 1;

writeControl timeStep;

writeInterval 500;

purgeWrite 2;

writeFormat ascii;

writePrecision 8;

writeCompression no;
timeFormat general;

timePrecision 6;

runTimeModifiable yes;
libs
  (
    "customBoundaryConditions.so"
  );

functions
{
#includeFunc probes
  residuals
  {
    type residuals;
    libs
      (
        "libutilityFunctionObjects.so"
      );
    fields
      (
        U
        p
      );
  }
  staticPressureDifference
  {
#includeFunc pressureDifferencePatch
    patch1 inlet;
    patch2 outlet;
#includeEtc "caseDicts/postProcessing/pressure/pressureDifferencePatch.cfg"
    region1
    {
#includeEtc "caseDicts/postProcessing/surfaceFieldValue/surfaceRegion.cfg"
      operation weightedAverage;
      weightField phi;
    }
    region2
    {
#includeEtc "caseDicts/postProcessing/surfaceFieldValue/surfaceRegion.cfg"
      operation weightedAverage;
      weightField phi;
    }
    executeControl writeTime;
    writeControl writeTime;
  }
  totalPressure
  {
#includeFunc totalPressureIncompressible
    pRef 0;
    rhoInf 1.2486254378144424;
#includeEtc "caseDicts/postProcessing/pressure/totalPressureIncompressible.cfg"
    executeControl writeTime;
    writeControl writeTime;
  }
  totalPressureDifference
  {
    type fieldValueDelta;
    libs
      (
        "libfieldFunctionObjects.so"
      );
    operation subtract;
    writeControl writeTime;
    executeControl writeTime;
    log yes;
    region1
    {
#includeEtc "caseDicts/postProcessing/surfaceFieldValue/surfaceRegion.cfg"
      operation weightedAverage;
      weightField phi;
      fields
        (
          total(p)
        );
      regionType patch;
      name inlet;
    }
    region2
    {
#includeEtc "caseDicts/postProcessing/surfaceFieldValue/surfaceRegion.cfg"
      operation weightedAverage;
      weightField phi;
      fields
        (
          total(p)
        );
      regionType patch;
      name outlet;
    }
  }
} 	// ************************************************************************* //

